{"ast":null,"code":"var _jsxFileName = \"/Users/baristna/Projects/tna/elements/dev/src/Radio.js\";\nvar __jsx = React.createElement;\n// Packages\nimport React, { createRef, useState, useEffect } from 'react'; // Hooks\n\nimport { useRadioChange } from '@btna/hooks'; // Helpers\n\nimport { classes as c } from '@btna/helpers';\nexport var Radio = function Radio(props) {\n  var name = props.name,\n      value = props.value,\n      children = props.children,\n      center = props.center,\n      hover = props.hover,\n      cssModule = props.cssModule,\n      defaultChecked = props.defaultChecked;\n  var id = name + '-' + value;\n  var nativeInput = createRef();\n\n  var _useState = useState(false),\n      isChecked = _useState[0],\n      setIsChecked = _useState[1]; // Sync native input with component \n\n\n  useEffect(function () {\n    setIsChecked(nativeInput.current.checked);\n  }, []); // Handle radio change with same name\n\n  useRadioChange(nativeInput, function () {\n    setIsChecked(nativeInput.current.checked);\n  }); // Render\n\n  return __jsx(\"div\", {\n    className: c(cssModule.radio, [cssModule.hover, hover]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: c(cssModule.box, [cssModule.center, center]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, isChecked && __jsx(\"div\", {\n    className: c(cssModule.check),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), __jsx(\"label\", {\n    className: cssModule.label,\n    htmlFor: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, children), __jsx(\"input\", {\n    className: cssModule[\"native\"],\n    type: \"radio\",\n    value: value,\n    name: name,\n    id: id,\n    ref: nativeInput,\n    defaultChecked: defaultChecked,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/baristna/Projects/tna/elements/dev/src/Radio.js"],"names":["React","createRef","useState","useEffect","useRadioChange","classes","c","Radio","props","name","value","children","center","hover","cssModule","defaultChecked","id","nativeInput","isChecked","setIsChecked","current","checked","radio","box","check","label"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD,C,CAEA;;AACA,SAASC,cAAT,QAA+B,aAA/B,C,CAEA;;AACA,SACEC,OAAO,IAAIC,CADb,QAEO,eAFP;AAIA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,MAE5BC,IAF4B,GAS1BD,KAT0B,CAE5BC,IAF4B;AAAA,MAG5BC,KAH4B,GAS1BF,KAT0B,CAG5BE,KAH4B;AAAA,MAI5BC,QAJ4B,GAS1BH,KAT0B,CAI5BG,QAJ4B;AAAA,MAK5BC,MAL4B,GAS1BJ,KAT0B,CAK5BI,MAL4B;AAAA,MAM5BC,KAN4B,GAS1BL,KAT0B,CAM5BK,KAN4B;AAAA,MAO5BC,SAP4B,GAS1BN,KAT0B,CAO5BM,SAP4B;AAAA,MAQ5BC,cAR4B,GAS1BP,KAT0B,CAQ5BO,cAR4B;AAW9B,MAAIC,EAAE,GAAGP,IAAI,GAAG,GAAP,GAAaC,KAAtB;AACA,MAAIO,WAAW,GAAGhB,SAAS,EAA3B;;AAZ8B,kBAaEC,QAAQ,CAAC,KAAD,CAbV;AAAA,MAazBgB,SAbyB;AAAA,MAadC,YAbc,iBAe9B;;;AACAhB,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,YAAY,CAACF,WAAW,CAACG,OAAZ,CAAoBC,OAArB,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT,CAhB8B,CAoB9B;;AACAjB,EAAAA,cAAc,CAACa,WAAD,EAAc,YAAM;AAChCE,IAAAA,YAAY,CAACF,WAAW,CAACG,OAAZ,CAAoBC,OAArB,CAAZ;AACD,GAFa,CAAd,CArB8B,CAyB9B;;AACA,SACE;AAAK,IAAA,SAAS,EAAEf,CAAC,CAACQ,SAAS,CAACQ,KAAX,EAAkB,CAACR,SAAS,CAACD,KAAX,EAAkBA,KAAlB,CAAlB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEP,CAAC,CAACQ,SAAS,CAACS,GAAX,EAAgB,CAACT,SAAS,CAACF,MAAX,EAAmBA,MAAnB,CAAhB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIM,SAAS,IAAI;AAAK,IAAA,SAAS,EAAEZ,CAAC,CAACQ,SAAS,CAACU,KAAX,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,CADF,EAIE;AAAO,IAAA,SAAS,EAAEV,SAAS,CAACW,KAA5B;AAAmC,IAAA,OAAO,EAAET,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDL,QAAjD,CAJF,EAKE;AACE,IAAA,SAAS,EAAEG,SAAS,UADtB;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEJ,KAHT;AAIE,IAAA,IAAI,EAAED,IAJR;AAKE,IAAA,EAAE,EAAEO,EALN;AAME,IAAA,GAAG,EAAEC,WANP;AAOE,IAAA,cAAc,EAAEF,cAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAiBD,CA3CM","sourcesContent":["// Packages\nimport React, { createRef, useState, useEffect } from 'react'\n\n// Hooks\nimport { useRadioChange } from '@btna/hooks'\n\n// Helpers\nimport {\n  classes as c\n} from '@btna/helpers'\n\nexport const Radio = (props) => {\n  let {\n    name,\n    value,\n    children,\n    center,\n    hover,\n    cssModule,\n    defaultChecked\n  } = props\n\n  let id = name + '-' + value\n  let nativeInput = createRef()\n  let [isChecked, setIsChecked] = useState(false)\n\n  // Sync native input with component \n  useEffect(() => {\n    setIsChecked(nativeInput.current.checked)\n  }, [])\n\n  // Handle radio change with same name\n  useRadioChange(nativeInput, () => {\n    setIsChecked(nativeInput.current.checked)\n  })\n\n  // Render\n  return (\n    <div className={c(cssModule.radio, [cssModule.hover, hover])}>\n      <div className={c(cssModule.box, [cssModule.center, center])}>\n        { isChecked && <div className={c(cssModule.check)} />}\n      </div>\n      <label className={cssModule.label} htmlFor={id}>{children}</label>\n      <input\n        className={cssModule.native}\n        type='radio'\n        value={value}\n        name={name}\n        id={id}\n        ref={nativeInput}\n        defaultChecked={defaultChecked}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
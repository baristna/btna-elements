{"ast":null,"code":"var _jsxFileName = \"/Users/baristna/Projects/tna/elements/dev/components/ListMenu.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Styles\nimport s from './ListMenu.scss'; // Packages\n\nimport Link from 'next/link';\nimport { createRef, useState } from 'react'; // Elements\n\nimport { Button } from '../elements'; // Helpers\n\nimport { classes as c, urlParse } from '@btna/helpers';\n\nvar isActive = function isActive(item, queryTarget, active) {\n  return item.target && urlParse(item.target) && urlParse(item.target).query && urlParse(item.target).query[queryTarget] == active;\n};\n\nvar isChildActive = function isChildActive(list, queryTarget, active) {\n  if (list && list.length) {\n    for (var i = 0; i < list.length; i++) {\n      var item = list[i];\n\n      if (isActive(item, queryTarget, active)) {\n        return true;\n      } else if (item.child) {\n        return isChildActive(item.child, queryTarget, active);\n      }\n    }\n  }\n};\n\nvar DistItems = function DistItems(props) {\n  var list = props.list,\n      queryTarget = props.queryTarget,\n      active = props.active;\n  return list.map(function (item, index) {\n    var activeCheck = isActive(item, queryTarget, active);\n    return __jsx(\"div\", {\n      key: index,\n      className: c(s.item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, item.target && __jsx(Link, {\n      href: item.target,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(Button, {\n      type: activeCheck ? 'primary' : 'ghost',\n      width: \"full\",\n      justify: \"between\",\n      text: item.name,\n      noshadow: activeCheck,\n      icon: activeCheck ? 'keyboard_arrow_right' : null,\n      iconPos: \"end\",\n      iconSize: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), item.child && __jsx(DistGroup, {\n      item: item,\n      active: active,\n      queryTarget: queryTarget,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  });\n};\n\nvar DistGroup = function DistGroup(props) {\n  var item = props.item,\n      queryTarget = props.queryTarget,\n      active = props.active;\n\n  var _useState = useState(isChildActive(item.child, queryTarget, active)),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var content = createRef();\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"ghost\",\n    width: \"full\",\n    justify: \"between\",\n    icon: isOpen ? 'keyboard_arrow_down' : 'keyboard_arrow_right',\n    iconPos: \"end\",\n    iconSize: 20,\n    text: item.name,\n    onClick: function onClick() {\n      setIsOpen(!isOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: c(s.group, [s.is_open, isOpen]),\n    ref: content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(DistItems, {\n    list: item.child,\n    active: active,\n    queryTarget: queryTarget,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })));\n};\n\nexport var ListMenu = function ListMenu(props) {\n  var list = props.list,\n      query = props.query,\n      queryTarget = props.queryTarget,\n      queryDefault = props.queryDefault;\n  var active = query && query[queryTarget] || queryDefault || '';\n  return __jsx(\"div\", {\n    className: c(s.listmenu),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(DistItems, {\n    list: list,\n    active: active,\n    queryTarget: queryTarget,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/baristna/Projects/tna/elements/dev/components/ListMenu.js"],"names":["s","Link","createRef","useState","Button","classes","c","urlParse","isActive","item","queryTarget","active","target","query","isChildActive","list","length","i","child","DistItems","props","map","index","activeCheck","name","DistGroup","isOpen","setIsOpen","content","group","is_open","ListMenu","queryDefault","listmenu"],"mappings":"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","sourcesContent":["// Styles\nimport s from './ListMenu.scss'\n\n// Packages\nimport Link from 'next/link';\nimport { createRef, useState } from 'react'\n\n// Elements\nimport { Button } from '../elements'\n\n// Helpers\nimport { classes as c, urlParse } from '@btna/helpers'\n\nconst isActive = (item, queryTarget, active) => {\n  return item.target && urlParse(item.target) && urlParse(item.target).query && (urlParse(item.target).query[queryTarget] == active)\n}\n\nconst isChildActive = (list, queryTarget, active) => {\n  if (list && list.length) { \n    for (let i=0; i<list.length; i++) {\n      let item = list[i]\n      if (isActive(item, queryTarget, active)) {\n        return true\n      } else if (item.child) {\n        return isChildActive(item.child, queryTarget, active)\n      }\n    }\n  }\n}\n\n\nconst DistItems = (props) => {\n  let { list, queryTarget, active } = props\n  return (\n    list.map((item, index) => {\n      const activeCheck = isActive(item, queryTarget, active)\n      return (\n        <div\n          key={index}\n          className={c(s.item)}\n        >\n          {\n            item.target && \n            <Link href={item.target}>\n              <Button\n                type={activeCheck ? 'primary' : 'ghost' }\n                width='full'\n                justify='between'\n                text={item.name}\n                noshadow={activeCheck}\n                icon={activeCheck ? 'keyboard_arrow_right' : null}\n                iconPos='end'\n                iconSize={20}\n              />\n            </Link>\n          }\n          { item.child && <DistGroup item={item} active={active} queryTarget={queryTarget} /> }\n        </div>\n      )\n    })\n  )\n}\n\nconst DistGroup = (props) => {\n  let { item, queryTarget, active } = props\n\n  const [isOpen, setIsOpen] = useState(isChildActive(item.child, queryTarget, active))\n  let content = createRef()\n\n  return <div>\n    <Button\n      type='ghost'\n      width='full'\n      justify='between'\n      icon={isOpen ? 'keyboard_arrow_down' : 'keyboard_arrow_right'}\n      iconPos='end'\n      iconSize={20}\n      text={item.name}\n      onClick={() => {\n        setIsOpen(!isOpen)\n      }}\n    />\n    <div className={c(s.group, [s.is_open, isOpen])} ref={content}>\n      <DistItems list={item.child} active={active} queryTarget={queryTarget} />\n    </div>\n  </div>\n}\n\nexport const ListMenu = (props) => {\n  let {list, query, queryTarget, queryDefault} = props\n  let active = (query && query[queryTarget]) || queryDefault || ''\n\n  return <div className={c(s.listmenu)}>{<DistItems list={list} active={active} queryTarget={queryTarget} />}</div>\n}\n"]},"metadata":{},"sourceType":"module"}